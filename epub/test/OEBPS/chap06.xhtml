<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>5 Be minimal</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
</head>
<body>
<div>
<h2 id="leanpub-auto-be-minimal"><span class="section-number">5 </span>Be minimal</h2>

<p>
  <strong>Or how an old genius guy named Leonardo Da Vinci, can still help today ?</strong>
</p>

<p>Even if minimal stuff seems more simple at the beginning, it often involves a long path that has to be walked progressively. Indeed, in order to know exactly what you need, you need to progressively reduce the big initial setup down to the very singular core of what you need. But targeting a minimal design at the very beginning wins!</p>

<p>In creating handled &amp; reduced constraints, it increases liberty. If you need to create music and perform it live without being distracted by a too big choice in your Ableton liveset, for instance, then you have to reduce your track numbers.</p>

<p>I did it and experimented with that in my life, because I’m a real “Principle of parsimony” addict. (Ockham’s Razor). I never produced as much as I’m doing now
before I decided to reduce my track to *only 8.
It could be dramatic for people to reduce things.
It is dramatic for me, too! Really! Often, they feel constrained (but most of them never uses more than 6 tracks even if they can use 130). Others are “afraid” to be short; those individuals need more than 15 return tracks, too.</p>

<p>At last, a lot of my students need more because they don’t know the tool enough. So they make workarounds everytime. After hours of practice, they often reduce too! Here, I offer you my experience of studio, stage and of people I have met.</p>

<p>Reducing &amp; being minimal around the core of your real need definitively wins.</p>

<div class="image-with-caption center">
  <img src="images/06.PNG" alt="" /><p class="caption"></p>
</div>

<p>This principle can be applied at any scale.
From this precise function of your interface to the whole interface itself and from the whole system of interfaces to … your life.</p>

<p>In the example on the left-top of the page, I wanted to express the fact we’re all focused on.</p>

<p>“Would I have enough elements if I choose to evolve in the future?”</p>

<p>The problem is: “Planning is guessing” as 37signals’ guys wrote.</p>

<p>You cannot know what your needs will be in the future. So, why build an interface with 856 buttons if today you only need 100 ? It would be better to build one with around 100 buttons. 108 maximum.</p>

<p>Believe my experiences in studio &amp; on stage, if you target n number of buttons today, if you have n+8, you’ll only use … n. It’s like that everytime.</p>

<p>In this example, I want you to understand the minimalism from another higher point of view: at the whole setup.</p>

<p>3 tips:</p>

<ul><li>use the same protocols as often as possible</li>
  <li>avoid complex routing as often as possible</li>
  <li>use hubs to aggregate/split flows as often as possible (here, this is The System)</li>
</ul><p>And be careful &amp; don’t answer: “it doesn’t work in the real life”</p>

<p>Because firstly, it does. And secondly, it would be an excuse not to go further and simplify the system. Don’t forget, each hour spent working on it now saves in freedom of creativity for the rest of your life!</p>
</div>
</body>
</html>
